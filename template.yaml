AWSTemplateFormatVersion: '2010-09-09'
Description: Automated deployment of a WordPress application with a two-tier architecture.

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [0, !GetAZs '']

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [0, !GetAZs '']

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [1, !GetAZs '']

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref RouteTable

  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Security group for web server with HTTP access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Security group for RDS DB instance allowing access from the web server
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref WebServerSecurityGroup

  WebServerInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0134dde2b68fe1b07  # Make sure this AMI ID is correct for your region
      InstanceType: t2.micro
      SecurityGroupIds:
        - !Ref WebServerSecurityGroup
      SubnetId: !Ref PublicSubnet
      UserData:
        Fn::Base64: |
          #!/bin/bash -xe
          yum update -y
          yum install -y httpd php php-mysqlnd php-gd php-xml wget curl unzip zip mysql
          systemctl start httpd
          systemctl enable httpd
          cd /var/www/html
          wget https://wordpress.org/latest.tar.gz
          tar -xzf latest.tar.gz
          cp -r wordpress/* .
          rm -rf wordpress latest.tar.gz
          DB_USERNAME=$(aws ssm get-parameter --name /wordpress/db-username --with-decryption --output text --query Parameter.Value)
          DB_PASSWORD=$(aws ssm get-parameter --name /wordpress/db-password --with-decryption --output text --query Parameter.Value)
          cp wp-config-sample.php wp-config.php
          sed -i "s/database_name_here/demo_db/g" wp-config.php
          sed -i "s/username_here/${DB_USERNAME}/g" wp-config.php
          sed -i "s/password_here/${DB_PASSWORD}/g" wp-config.php
          sed -i "s/localhost/`!GetAtt DBInstance.Endpoint.Address`/g" wp-config.php
          chown -R apache:apache /var/www/html
          chmod -R 755 /var/www/html
          systemctl restart httpd

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: "Subnet Group for RDS"
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2

  DBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t3.micro
      Engine: "mysql"
      DBName: "demo_db"
      MasterUsername: '{{resolve:ssm:/wordpress/db-username}}'
      MasterUserPassword: '{{resolve:ssm-secure:/wordpress/db-password}}'
      DBSubnetGroupName: !Ref DBSubnetGroup
      VPCSecurityGroups:
        - !Ref DBSecurityGroup
      MultiAZ: false
      AllocatedStorage: 20
